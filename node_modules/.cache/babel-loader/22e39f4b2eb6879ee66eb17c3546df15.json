{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Son\\\\Documents\\\\MEGAsync\\\\Estudos\\\\node+react\\\\React\\\\cronometro\\\\src\\\\Timer.js\";\nimport React from 'react';\nimport Botao from './Botao';\nimport LabelCronometro from './LabelCronometro';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      segundos: 10,\n      minutos: 0,\n      isOn: false\n    };\n  }\n\n  decrementar() {\n    this.setState(state => {\n      if (this.state.isOn === true) {\n        if (state.segundos == 0 && state.minutos > 0) {\n          this.segreset();\n          this.decrementarMin();\n        } else if (state.segundos == 0 && state.minutos == 0) {}\n\n        return {\n          segundos: state.segundos - 1\n        };\n      }\n    });\n  }\n\n  segreset() {\n    this.setState({\n      segundos: 59\n    });\n  }\n\n  decrementarMin() {\n    this.setState({\n      minutos: this.state.minutos + 1\n    });\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => this.incrementar(), 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, this.state.minutos, \":\", this.state.segundos));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Son/Documents/MEGAsync/Estudos/node+react/React/cronometro/src/Timer.js"],"names":["React","Botao","LabelCronometro","Timer","Component","constructor","props","state","segundos","minutos","isOn","decrementar","setState","segreset","decrementarMin","componentDidMount","timer","setInterval","incrementar","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE,CAFA;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKH;;AAEDC,EAAAA,WAAW,GAAE;AACT,SAAKC,QAAL,CACKL,KAAD,IAAW;AACP,UAAG,KAAKA,KAAL,CAAWG,IAAX,KAAkB,IAArB,EAA0B;AAC1B,YAAGH,KAAK,CAACC,QAAN,IAAkB,CAAlB,IAAuBD,KAAK,CAACE,OAAN,GAAc,CAAxC,EAA0C;AACtC,eAAKI,QAAL;AACA,eAAKC,cAAL;AACH,SAHD,MAGO,IAAGP,KAAK,CAACC,QAAN,IAAkB,CAAlB,IAAuBD,KAAK,CAACE,OAAN,IAAe,CAAzC,EAA2C,CAEjD;;AACD,eAAO;AAACD,UAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,GAAiB;AAA5B,SAAP;AACH;AACA,KAXL;AAaH;;AAEDK,EAAAA,QAAQ,GAAE;AACN,SAAKD,QAAL,CAAc;AAACJ,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACH;;AAEDM,EAAAA,cAAc,GAAE;AACZ,SAAKF,QAAL,CAAc;AAACH,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAAX,GAAoB;AAA9B,KAAd;AACH;;AAEDM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,GAAaC,WAAW,CAAE,MAAM,KAAKC,WAAL,EAAR,EAA2B,IAA3B,CAAxB;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKZ,KAAL,CAAWE,OAAhB,OAA0B,KAAKF,KAAL,CAAWC,QAArC,CADA,CADJ;AAMH;;AA9C8B","sourcesContent":["import React from 'react'\r\nimport Botao from './Botao'\r\nimport LabelCronometro from './LabelCronometro'\r\n\r\nclass Timer extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            segundos: 10,\r\n            minutos: 0,\r\n            isOn: false,\r\n        }\r\n    }\r\n\r\n    decrementar(){\r\n        this.setState (\r\n            (state) => {\r\n                if(this.state.isOn===true){\r\n                if(state.segundos == 0 && state.minutos>0){\r\n                    this.segreset()\r\n                    this.decrementarMin()\r\n                } else if(state.segundos == 0 && state.minutos==0){\r\n\r\n                }\r\n                return({segundos: state.segundos - 1})\r\n            }\r\n            }\r\n        )\r\n    }\r\n\r\n    segreset(){\r\n        this.setState({segundos: 59})\r\n    }\r\n\r\n    decrementarMin(){\r\n        this.setState({minutos: this.state.minutos +1})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timer = setInterval( () => this.incrementar(),1000)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            <h1>{this.state.minutos}:{this.state.segundos}</h1>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}